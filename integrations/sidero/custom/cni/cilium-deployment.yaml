---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: 'cilium'
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: 'cilium-operator'
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BUkZyNWtIWFRwYkJTVjNYdmVUSUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBd01URTBNelEwTlZvWERUSTFNRGt6TURFMApNelEwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1NGJhVmZFWDBKTU1ia2xoeTBwdGtoVkh6eXpWeGdDZnVjc1dQekdCdGQxVERJeUcKYmc0QjFHMWdDemtLUmpoZzlNcW1reFA2Z3VDejN3MEg3b2pwK2tWdy9WS2x4OW15TmJBaWIrd0hsQW5qYzZnNQpVWWNkMU1Jc1JIZmlIQm0ydk9hd2ZFcHkwa3Z3YTNlSUVGa2oxVEFQNmxrcm42WlZ6TXhSbGhoTXdWUG1qcDlCCjk0SVY1bjdQZUoySGVpUlp2SnZkZFlxdHZ1d1NVK3B0dDNGemFvTTQ4UExtb3RXVEoySGdxZWhuRnNOVHBtbi8KVHE1RldkNDRYRDRWUjJWSzJPNndOamRLVEpLVE00QVRwWU9jdnNOTUFFem1MeFdZeWJhN1gycU5OOUhJL00xRAp5aGhCM2k0OUo2a2d3bC9CY0YyS0MxTWhmMEdDZHMzdDQ2MVFiUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRUFaaGM2Q1A3ek4rRFg4U1p5MU14MFNvSUE0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQSsyR3lkVE0zclpBWUdYaWVnWm9BTWw0TC8vZS9DWW9VNDRSTkJ5WEVVMEo0YXhmSmRUS3VSCm5jQ0dleDRadDZxSk14U2FJV3V5U3hLK2xKZkgzSW1icldRUGRtcEFEa1JJVm1QdGhEMHV2TGliK1ptWE5peEEKUkZuZnNSam9kcC9QcWpuZStYNnd4V2F3cEgvZU5lbnRkUnV6ampVSGtnRTJOeTlpeVg5TG9HWmwwUlk4N1RNVApNSUdNcXJSWURTZ3lDWThIb0NCMmlWdDV0cFVVTkdkYVN3UVp4NzlZT0taTDE0Zm4wYmdZUGxZamlBR2xmWDBzCmdVbG9xSzg3d1ZMQmZSQTVERndXdC9WdEhFQ1RMWXMrTGVsZWNpT2J6L1pvdklVb2M3OXR2Y1h5MmsvaG1BSkYKcGppb1VrZVU2VlFNbkJRWE5MN3lkd1NtR2ZqbWNSNEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTRiYVZmRVgwSk1NYmtsaHkwcHRraFZIenl6VnhnQ2Z1Y3NXUHpHQnRkMVRESXlHCmJnNEIxRzFnQ3prS1JqaGc5TXFta3hQNmd1Q3ozdzBIN29qcCtrVncvVktseDlteU5iQWliK3dIbEFuamM2ZzUKVVljZDFNSXNSSGZpSEJtMnZPYXdmRXB5MGt2d2EzZUlFRmtqMVRBUDZsa3JuNlpWek14UmxoaE13VlBtanA5Qgo5NElWNW43UGVKMkhlaVJadkp2ZGRZcXR2dXdTVStwdHQzRnphb000OFBMbW90V1RKMkhncWVobkZzTlRwbW4vClRxNUZXZDQ0WEQ0VlIyVksyTzZ3TmpkS1RKS1RNNEFUcFlPY3ZzTk1BRXptTHhXWXliYTdYMnFOTjlISS9NMUQKeWhoQjNpNDlKNmtnd2wvQmNGMktDMU1oZjBHQ2RzM3Q0NjFRYlFJREFRQUJBb0lCQUNJSHpkVnN4QXFZdE5mSwp2MUY1OXpwY1hFU3ZlVGZPWXkzL09kRkw5YU1BUUJMMTZXdE5aVzJjVDZLWnZsQ1I2SjVqckNqaXBrSmI3cWhhCm9BYmNsOEZRR3JvTjVvSEc4cjBsY29wbkJkVUttbGtodlEwYmZRRmdIMUpwZ3dIZ2RMWUJFeVByQ3IwNUJLOHIKNk9nMmxQY2FHcmxIWjFBNGlqZDVHSkVwWmJ4cllzWVAxS3VrUDRtTmp4Z1Fub0tNUnJnWjBOQkJwRmo2MUh3cAo1ZFhiZ0E3ZUJmNmlkOHpBMGRTZGZWM0lrZ2xob0cyWmFOWTdVaUNzd2ZQNWd1NXd1LzBrNTRIUTQ2VGNldkQyCi9sMjlvM1ZtdE16SWpWOEFmLys0RFIxYUptWnNBc3ZXM0oxSGw2RFRaZXhvRFZhNEFqQmdGenFEbThJYWgwQzIKUytWUE9zRUNnWUVBNDVOR0NlaHFYYVBudUx3K1k4czM0UkI0MWN0bytxbWxKRkNHd0Q0SDlQRUxra2o3QlYxUQpURWN5Y1NQMEtwb2hZODRlejFndTBJL3YxMkN2VE4yU1E4b2puNC83RGZFK002d2ZsdnlQZU5haHlheS8xV0VGCmI4T1owL1hzTVFXd1JhSUd5VjM1TkZjNzVoRjlBU1EzTk53ZmJ6MzZzNHFUd0hWa1lvdlZtaDBDZ1lFQTB2TUcKMlBqQVRVTWwxSmpHWjc0YWg1cFM3TzI3a2hmUUw3VmZvWUx3eUR2Uk9IbkQzWllEQTlDdUlqM2VCcXk2TGE2ZgowTGluQXd5ajg5VnlzY1VUdnF2Qi9TZEswZXR3Umk4YWFrTDNnL09mTU5lNjZVQkhhbVF5NG9Say9MZ05ZZDFQCjE3czQ0cGpFM05sTXAxYnNmdUY0SDdKbU9LcFlpQmp0ZGFkMlBwRUNnWUFNeFpFaXNUWjI5dUhrVGp3NklZZUwKUy85Y0VFUmQvUE5WckdkRGxyZWZtWCtLd0NuR1RVeGFXNHlMS1BkbEJLMW5Db1JVSXFETjk2WUFNbDdrTTNNbgo5c28xQkVHVXNMdEs3eGYrdzBIU0NFbWdKZC9HTytHd09nd0NCMFV3SXgrWGFOWjBxcDkzdm9XUURkODBGekk1Cjl6aVVaNmdRTjNDL1ZsZEI2Sk1lU1FLQmdRREREVUFKbzRoOGFGZzBpY2I2NmdheDEvcFJaVWlJdjBnYXRRUmwKM1NNeW9rekVnYUtmNHpPS2RZeHQwUExaRFNGaFdCUWg5SHRKRUlrUXp3NnNYV1B5YS9LRlY2MlJDTGZaelhnSgpSVDZFWGVHV1VnTmI1Ym1qSUY4RW9CS1lzcjU4L1J2MGlBTURVdXJFb3BDRU1wV2VoSENFTG5yaWJuQko5M0twCjFWdzZZUUtCZ0JGdHhWK1RNMStUN0M0VGJxVlQ0dm16ODEwOVRXakpDYUxRQ3VQSCtKb0FVSit0d2dtM2FHMXAKOVdIWlU3b3BObkFCTkIwMHNEVXd0TDlGOEpPUld2SnBHRm9sLzkrQlIrWE9jcmtLOUpUV1dXWGpCT0VMcmFmVwpKYWhnN1gzTEFWQW9HamQrOHVzNG4vdjh2Q3ZnazVJbllNQVNOdWxxb0NBM3c5Yy8xZmdPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BUkZyNWtIWFRwYkJTVjNYdmVUSUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBd01URTBNelEwTlZvWERUSTFNRGt6TURFMApNelEwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1NGJhVmZFWDBKTU1ia2xoeTBwdGtoVkh6eXpWeGdDZnVjc1dQekdCdGQxVERJeUcKYmc0QjFHMWdDemtLUmpoZzlNcW1reFA2Z3VDejN3MEg3b2pwK2tWdy9WS2x4OW15TmJBaWIrd0hsQW5qYzZnNQpVWWNkMU1Jc1JIZmlIQm0ydk9hd2ZFcHkwa3Z3YTNlSUVGa2oxVEFQNmxrcm42WlZ6TXhSbGhoTXdWUG1qcDlCCjk0SVY1bjdQZUoySGVpUlp2SnZkZFlxdHZ1d1NVK3B0dDNGemFvTTQ4UExtb3RXVEoySGdxZWhuRnNOVHBtbi8KVHE1RldkNDRYRDRWUjJWSzJPNndOamRLVEpLVE00QVRwWU9jdnNOTUFFem1MeFdZeWJhN1gycU5OOUhJL00xRAp5aGhCM2k0OUo2a2d3bC9CY0YyS0MxTWhmMEdDZHMzdDQ2MVFiUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRUFaaGM2Q1A3ek4rRFg4U1p5MU14MFNvSUE0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQSsyR3lkVE0zclpBWUdYaWVnWm9BTWw0TC8vZS9DWW9VNDRSTkJ5WEVVMEo0YXhmSmRUS3VSCm5jQ0dleDRadDZxSk14U2FJV3V5U3hLK2xKZkgzSW1icldRUGRtcEFEa1JJVm1QdGhEMHV2TGliK1ptWE5peEEKUkZuZnNSam9kcC9QcWpuZStYNnd4V2F3cEgvZU5lbnRkUnV6ampVSGtnRTJOeTlpeVg5TG9HWmwwUlk4N1RNVApNSUdNcXJSWURTZ3lDWThIb0NCMmlWdDV0cFVVTkdkYVN3UVp4NzlZT0taTDE0Zm4wYmdZUGxZamlBR2xmWDBzCmdVbG9xSzg3d1ZMQmZSQTVERndXdC9WdEhFQ1RMWXMrTGVsZWNpT2J6L1pvdklVb2M3OXR2Y1h5MmsvaG1BSkYKcGppb1VrZVU2VlFNbkJRWE5MN3lkd1NtR2ZqbWNSNEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTRiYVZmRVgwSk1NYmtsaHkwcHRraFZIenl6VnhnQ2Z1Y3NXUHpHQnRkMVRESXlHCmJnNEIxRzFnQ3prS1JqaGc5TXFta3hQNmd1Q3ozdzBIN29qcCtrVncvVktseDlteU5iQWliK3dIbEFuamM2ZzUKVVljZDFNSXNSSGZpSEJtMnZPYXdmRXB5MGt2d2EzZUlFRmtqMVRBUDZsa3JuNlpWek14UmxoaE13VlBtanA5Qgo5NElWNW43UGVKMkhlaVJadkp2ZGRZcXR2dXdTVStwdHQzRnphb000OFBMbW90V1RKMkhncWVobkZzTlRwbW4vClRxNUZXZDQ0WEQ0VlIyVksyTzZ3TmpkS1RKS1RNNEFUcFlPY3ZzTk1BRXptTHhXWXliYTdYMnFOTjlISS9NMUQKeWhoQjNpNDlKNmtnd2wvQmNGMktDMU1oZjBHQ2RzM3Q0NjFRYlFJREFRQUJBb0lCQUNJSHpkVnN4QXFZdE5mSwp2MUY1OXpwY1hFU3ZlVGZPWXkzL09kRkw5YU1BUUJMMTZXdE5aVzJjVDZLWnZsQ1I2SjVqckNqaXBrSmI3cWhhCm9BYmNsOEZRR3JvTjVvSEc4cjBsY29wbkJkVUttbGtodlEwYmZRRmdIMUpwZ3dIZ2RMWUJFeVByQ3IwNUJLOHIKNk9nMmxQY2FHcmxIWjFBNGlqZDVHSkVwWmJ4cllzWVAxS3VrUDRtTmp4Z1Fub0tNUnJnWjBOQkJwRmo2MUh3cAo1ZFhiZ0E3ZUJmNmlkOHpBMGRTZGZWM0lrZ2xob0cyWmFOWTdVaUNzd2ZQNWd1NXd1LzBrNTRIUTQ2VGNldkQyCi9sMjlvM1ZtdE16SWpWOEFmLys0RFIxYUptWnNBc3ZXM0oxSGw2RFRaZXhvRFZhNEFqQmdGenFEbThJYWgwQzIKUytWUE9zRUNnWUVBNDVOR0NlaHFYYVBudUx3K1k4czM0UkI0MWN0bytxbWxKRkNHd0Q0SDlQRUxra2o3QlYxUQpURWN5Y1NQMEtwb2hZODRlejFndTBJL3YxMkN2VE4yU1E4b2puNC83RGZFK002d2ZsdnlQZU5haHlheS8xV0VGCmI4T1owL1hzTVFXd1JhSUd5VjM1TkZjNzVoRjlBU1EzTk53ZmJ6MzZzNHFUd0hWa1lvdlZtaDBDZ1lFQTB2TUcKMlBqQVRVTWwxSmpHWjc0YWg1cFM3TzI3a2hmUUw3VmZvWUx3eUR2Uk9IbkQzWllEQTlDdUlqM2VCcXk2TGE2ZgowTGluQXd5ajg5VnlzY1VUdnF2Qi9TZEswZXR3Umk4YWFrTDNnL09mTU5lNjZVQkhhbVF5NG9Say9MZ05ZZDFQCjE3czQ0cGpFM05sTXAxYnNmdUY0SDdKbU9LcFlpQmp0ZGFkMlBwRUNnWUFNeFpFaXNUWjI5dUhrVGp3NklZZUwKUy85Y0VFUmQvUE5WckdkRGxyZWZtWCtLd0NuR1RVeGFXNHlMS1BkbEJLMW5Db1JVSXFETjk2WUFNbDdrTTNNbgo5c28xQkVHVXNMdEs3eGYrdzBIU0NFbWdKZC9HTytHd09nd0NCMFV3SXgrWGFOWjBxcDkzdm9XUURkODBGekk1Cjl6aVVaNmdRTjNDL1ZsZEI2Sk1lU1FLQmdRREREVUFKbzRoOGFGZzBpY2I2NmdheDEvcFJaVWlJdjBnYXRRUmwKM1NNeW9rekVnYUtmNHpPS2RZeHQwUExaRFNGaFdCUWg5SHRKRUlrUXp3NnNYV1B5YS9LRlY2MlJDTGZaelhnSgpSVDZFWGVHV1VnTmI1Ym1qSUY4RW9CS1lzcjU4L1J2MGlBTURVdXJFb3BDRU1wV2VoSENFTG5yaWJuQko5M0twCjFWdzZZUUtCZ0JGdHhWK1RNMStUN0M0VGJxVlQ0dm16ODEwOVRXakpDYUxRQ3VQSCtKb0FVSit0d2dtM2FHMXAKOVdIWlU3b3BObkFCTkIwMHNEVXd0TDlGOEpPUld2SnBHRm9sLzkrQlIrWE9jcmtLOUpUV1dXWGpCT0VMcmFmVwpKYWhnN1gzTEFWQW9HamQrOHVzNG4vdjh2Q3ZnazVJbllNQVNOdWxxb0NBM3c5Yy8xZmdPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5BUkZyNWtIWFRwYkJTVjNYdmVUSUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRBd01URTBNelEwTlZvWERUSTFNRGt6TURFMApNelEwTlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1NGJhVmZFWDBKTU1ia2xoeTBwdGtoVkh6eXpWeGdDZnVjc1dQekdCdGQxVERJeUcKYmc0QjFHMWdDemtLUmpoZzlNcW1reFA2Z3VDejN3MEg3b2pwK2tWdy9WS2x4OW15TmJBaWIrd0hsQW5qYzZnNQpVWWNkMU1Jc1JIZmlIQm0ydk9hd2ZFcHkwa3Z3YTNlSUVGa2oxVEFQNmxrcm42WlZ6TXhSbGhoTXdWUG1qcDlCCjk0SVY1bjdQZUoySGVpUlp2SnZkZFlxdHZ1d1NVK3B0dDNGemFvTTQ4UExtb3RXVEoySGdxZWhuRnNOVHBtbi8KVHE1RldkNDRYRDRWUjJWSzJPNndOamRLVEpLVE00QVRwWU9jdnNOTUFFem1MeFdZeWJhN1gycU5OOUhJL00xRAp5aGhCM2k0OUo2a2d3bC9CY0YyS0MxTWhmMEdDZHMzdDQ2MVFiUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRUFaaGM2Q1A3ek4rRFg4U1p5MU14MFNvSUE0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQSsyR3lkVE0zclpBWUdYaWVnWm9BTWw0TC8vZS9DWW9VNDRSTkJ5WEVVMEo0YXhmSmRUS3VSCm5jQ0dleDRadDZxSk14U2FJV3V5U3hLK2xKZkgzSW1icldRUGRtcEFEa1JJVm1QdGhEMHV2TGliK1ptWE5peEEKUkZuZnNSam9kcC9QcWpuZStYNnd4V2F3cEgvZU5lbnRkUnV6ampVSGtnRTJOeTlpeVg5TG9HWmwwUlk4N1RNVApNSUdNcXJSWURTZ3lDWThIb0NCMmlWdDV0cFVVTkdkYVN3UVp4NzlZT0taTDE0Zm4wYmdZUGxZamlBR2xmWDBzCmdVbG9xSzg3d1ZMQmZSQTVERndXdC9WdEhFQ1RMWXMrTGVsZWNpT2J6L1pvdklVb2M3OXR2Y1h5MmsvaG1BSkYKcGppb1VrZVU2VlFNbkJRWE5MN3lkd1NtR2ZqbWNSNEEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYzB4TVB0Z3U2WnF0R0orR1lJdUpDakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TURBeE1UUXpORFExV2hjTk1qVXdPVE13TVRRegpORFExV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBenBINlR1cFRvYjZqc0RKc3BFNUMKWHVlQW5PNWY2N1F6V1FDUHVDcStJaUFXUTJaMmMrc3k3ejMwVmFSUTA5ditRSlhRa2E1WmYyWWoxQit0ekZvZQpNTmtrcG1GMDdjQ3BBNGZiV1ZVOHZzWGFSM2dXeTYxN0o1Tlo0RGtrYlpHNndkOEJTcUNaaWdVZnBqSlVVWEdiCkxSNXRCRGJ0YUdQbWpodWxKY3JWcDRDdlo1UUxqeFAxcWtaREhTdk9wU0w0NzY4SnFJVmw2R01WM1R6UW9kZWcKZnhYM3B3d1BGTitkV1ppbGszaFBQMVlDRmp2ak1oblc5R0t1SE1nZnpoVE56SGN6c2tDSlBhTkZLVGFSeFpiVwpGSnRBMWJBa25Qb0RFS1U4R2UzdGlWOGc5dEJDZWI4SmlPZE9haVpIbDlJRGlOME93cjJtdkswcTlFVEJLWHRWCnhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSQUdZWE9nais4emZnMQovRW1jdFRNZEVxQ0FPREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDY0tYWFlJbVB6Z1FkQVZtc3VpTTBoQmNmNE9YRVMKSVpGQTAwTFNwZWVFenNMdXRHbDk1d3V2eElnMGxxaVloZnd1alVqTE9IODhwcmsrUG1xYVlqRlpGamVsaEkrLwo3WVNJNFNWMlp6ckhZSXRYTXpqd3ZrYUpLYkFTc3MrbXA3b3ZVa2h1b0hhdlAyVXcyb1hBdC80ckc1V3dCNUphClhKeENrZjJ0WkRENDZOdnlpVGpILy8raElkVHd6L3JESHpBOXU2Nll6TS9kVHAyKy9hWFZNZkNwejNNZklZZDMKYlZtQXNNRHEwUUwxeEsvRFRGMWdhS3lLTXR1U1Y1Ym9KeEtyTzNOcThsYlBBUzhLclUvdFJxL0hySklGYyt0cApVeDB4L0Y5QWlEcmZrY3B1NmVHTHZmYUQya215ODIwVWxUWGFpRHlGVEdueW1VbnE0NWY2SExVaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBenBINlR1cFRvYjZqc0RKc3BFNUNYdWVBbk81ZjY3UXpXUUNQdUNxK0lpQVdRMloyCmMrc3k3ejMwVmFSUTA5ditRSlhRa2E1WmYyWWoxQit0ekZvZU1Oa2twbUYwN2NDcEE0ZmJXVlU4dnNYYVIzZ1cKeTYxN0o1Tlo0RGtrYlpHNndkOEJTcUNaaWdVZnBqSlVVWEdiTFI1dEJEYnRhR1Btamh1bEpjclZwNEN2WjVRTApqeFAxcWtaREhTdk9wU0w0NzY4SnFJVmw2R01WM1R6UW9kZWdmeFgzcHd3UEZOK2RXWmlsazNoUFAxWUNGanZqCk1oblc5R0t1SE1nZnpoVE56SGN6c2tDSlBhTkZLVGFSeFpiV0ZKdEExYkFrblBvREVLVThHZTN0aVY4Zzl0QkMKZWI4SmlPZE9haVpIbDlJRGlOME93cjJtdkswcTlFVEJLWHRWeFFJREFRQUJBb0lCQVFDZkdnWXR0QVBZSjBwUwpFblJsRkxXLy9SU3RTbGhzNWExSzFzamJNMmlnUmhCL3R6SnkwK3UySXdURzFiay9oRWpQRzlTNThBeVV1R25PCkh0d3c4aFFnMFk2TjY3QXcwdHdha1JBY1BTOTlURXgwRVlXVk9MZ0xZazJ1Q3JVSkExNVJwbDZMU1NrWkNoczMKV2JwaHhGdWRvN3FacldpcnA0NVRVKzJlTHh6aVZqTzBxWEtEeGg4ckx0WU5iWDh6U3lhRnBTK0t1U2JUelhrMgprL3N1Qm9MNzgyek5SZ1VDVnd6ZWp0aEpycm9PcXl1M3MvUW1pYzl6U0o2R0FoWC9xa29iTGRueDQrcVZQVTBVCk12ajh0T3dXRUFoei9lN1J5SERvUTczK2djMzY2NGJONjJMYVk4OEhVNTU5d1NjR3FOOHE1bG9YRk5MYlRRYkkKRTJKUXJ6K0JBb0dCQU54dDMwcUNIb1pCSk1Xb0E2NEl6TzkyT1RjVXFxR1BMcEprVlEySUU5dHJORHA0d2NuaQo2aVdQMFlyTWZEaXBidndyWlNtM1ZvaUk1SUN3dW45a0J6dXM2WXcyUkhSSHVzNTV6WWl6Ylo1WDlDL1VvZlRQCjFEbnFyWURGN1gxVWFYcWhnVExhYlpLK1Y1K1B4YTlLWUY3QzdWaHluU2d4QnlGRG1mOGpEdjVoQW9HQkFPL24KbEU5aEhTbFZwK0d6cnBLZ2M5UWdqUnhJcU1Tb2Rud3QxWkpLbHpzWXp6QXlUQytaTDYzSzhoZW4weHNXVHo0dAphNjI4ZXlydTdiVlZTZW16VFFoNDNWNkpGZHZHL2JvdmxjTFY4NFB5dkZna3dLaHFma0d2MmYyUDZ6ZFlaYi9ECjM4cDQwNHlESmswQ2IweDFHcjlZTkVrWlBnbHJ3NUI3cHc4SVBHbmxBb0dCQUxRaHhYdHA0ZS9zaEZSUi9NL1gKdVVGbTUxS3Z2TkRSNVVrVVhMejJHdVFRTTFvbEhKZ1NxeTJPM2JvRGFQQVU1ZkdFdE9MbVEvekhnWlA0MkM4SwpXeTdWR3ZYTjB4c0RFeEZ3VUJvS0p1WmpFZFdVZWRWSmtURFRLbjQxUU9KT2ZQUU56enJ6Yk4raVZKQzhPTndLCmQ3NTRwT1RHcE04WFliQTVRanRSTnd1QkFvR0FhNUFoWnhYYnhWU3FXUC8vSGE3alFCRDRNOTVBRFN5Yk0wSTUKcDhYWjJKMWZCL1VGUTdJak5vRHYycnRjWTZDMUZ1TzJpOGNlVWptZVN0ZGF0SFczN0R5RXhJWWlUdEFCb3lFQwp2TURBMWtCWFFnMzRjNHFMNFZlL0hYa1J0VmJsQi80Q3NQMUxuSXlROTZaSDBMZ1FyZ29XSjFBeUNIZFF6ODhoCk1CUTVRaUVDZ1lFQW1kdVRKNVVHSHJIYTlvN3UrekM0c3BIbzdvOFVVN3N3TDVmbldXRHl6ckxLMWQ0SDRhbFgKZGJSem5IbXhWT3l6Z1lXYjBsbUw2c2lWQzdvZW52UlFlbWY1YnlBcE9NNEJRSDBuSHJqb3lQSHdMUXRWRnUyLwo2bFI3VTJtOEJWSjBIYi9udG9mUEN0Z2g0enJINUtIRXQzcE1FVkxyQ1Ezd2YrWlVUZzlVV1k0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: '5m0s'
  nodes-gc-interval: '5m0s'
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: 'false'

  # If you want to run cilium in debug mode change this value to true
  debug: 'false'
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: 'default'

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: 'true'

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: 'false'
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: 'false'
  enable-bpf-clock-probe: 'true'
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: '0.0025'
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: '16384'
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: '65536'
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: 'false'

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: 'false'

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: 'cilium/istio_proxy'

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: '0'

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: 'vxlan'
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: 'true'

  enable-ipv4-masquerade: 'true'
  enable-ipv6-masquerade: 'true'

  enable-xt-socket-fallback: 'true'
  install-iptables-rules: 'true'
  install-no-conntrack-iptables-rules: 'false'

  auto-direct-node-routes: 'false'
  enable-local-redirect-policy: 'false'

  kube-proxy-replacement: 'strict'
  kube-proxy-replacement-healthz-bind-address: ''
  bpf-lb-sock: 'false'
  enable-health-check-nodeport: 'true'
  node-port-bind-protection: 'true'
  enable-auto-protect-node-port-range: 'true'
  enable-svc-source-range-check: 'true'
  enable-l2-neigh-discovery: 'true'
  arping-refresh-period: '30s'
  enable-endpoint-health-checking: 'true'
  enable-health-checking: 'true'
  enable-well-known-identities: 'false'
  enable-remote-node-identity: 'true'
  synchronize-k8s-nodes: 'true'
  operator-api-serve-addr: '127.0.0.1:9234'
  # Enable Hubble gRPC service.
  enable-hubble: 'true'
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: '/var/run/cilium/hubble.sock'
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ':4244'
  hubble-disable-tls: 'false'
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: 'kubernetes'
  disable-cnp-status-updates: 'true'
  enable-vtep: 'false'
  vtep-endpoint: ''
  vtep-cidr: ''
  vtep-mask: ''
  vtep-mac: ''
  enable-bgp-control-plane: 'false'
  procfs: '/host/proc'
  bpf-root: '/sys/fs/bpf'
  cgroup-root: '/run/cilium/cgroupv2'
  enable-k8s-terminating-endpoint: 'true'
  remove-cilium-node-taints: 'true'
  set-cilium-is-up-condition: 'true'
  unmanaged-pod-watcher-interval: '15'
  tofqdns-dns-reject-response-code: 'refused'
  tofqdns-enable-dns-compression: 'true'
  tofqdns-endpoint-max-ip-per-hostname: '50'
  tofqdns-idle-connection-grace-period: '0s'
  tofqdns-max-deferred-connection-deletes: '10000'
  tofqdns-min-ttl: '3600'
  tofqdns-proxy-response-max-delay: '100ms'
  agent-not-ready-taint-key: 'node.cilium.io/agent-not-ready'
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumbgploadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumegressnatpolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    # To synchronize garbage collection of such resources
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
  - apiGroups:
      - ''
    resources:
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      # To synchronize garbage collection of such resources
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
        # To perform CiliumNode garbage collector
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
    resourceNames:
      - ciliumbgploadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumegressnatpolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: 'cilium'
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: 'cilium-operator'
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: 'unconfined'
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: 'unconfined'
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: 'unconfined'
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: 'unconfined'
      labels:
        k8s-app: cilium
    spec:
      containers:
        - name: cilium-agent
          image: 'quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36'
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: 'brief'
                  value: 'true'
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: 'brief'
                  value: 'true'
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: 'brief'
                  value: 'true'
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 'cp-vms.k8s.lmwpva.net'
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          lifecycle:
            postStart:
              exec:
                command:
                  - '/cni-install.sh'
                  - '--enable-debug=false'
                  - '--cni-exclusive=true'
                  - '--log-file=/var/run/cilium/cilium-cni.log'
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          securityContext:
            seLinuxOptions:
              level: 's0'
              # Running with spc_t since we have removed the privileged mode.
              # Users can change it to a different type as long as they have the
              # type available on the system.
              type: 'spc_t'
            capabilities:
              add:
                # Use to set socket permission
                - CHOWN
                # Used to terminate envoy child process
                - KILL
                # Used since cilium modifies routing tables, etc...
                - NET_ADMIN
                # Used since cilium creates raw sockets, etc...
                - NET_RAW
                # Used since cilium monitor uses mmap
                - IPC_LOCK
                # Used in iptables. Consider removing once we are iptables-free
                - SYS_MODULE
                # We need it for now but might not need it for >= 5.11 specially
                # for the 'SYS_RESOURCE'.
                # In >= 5.8 there's already BPF and PERMON capabilities
                - SYS_ADMIN
                # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
                - SYS_RESOURCE
                # Both PERFMON and BPF requires kernel 5.8, container runtime
                # cri-o >= v1.22.0 or containerd >= v1.5.0.
                # If available, SYS_ADMIN can be removed.
                #- PERFMON
                #- BPF
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            # Unprivileged containers need to mount /proc/sys/net from the host
            # to have write access
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            # Unprivileged containers need to mount /proc/sys/kernel from the host
            # to have write access
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Unprivileged containers can't set mount propagation to bidirectional
              # in this case we will mount the bpf fs from an init container that
              # is privileged and set the mount propagation from host to container
              # in Cilium.
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: cni-path
              mountPath: /host/opt/cni/bin
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
      initContainers:
        # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
        # We use nsenter command with host's cgroup and mount namespaces enabled.
        - name: mount-cgroup
          image: 'quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36'
          imagePullPolicy: IfNotPresent
          env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh and mount that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-mount /hostbin/cilium-mount;
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
              rm /hostbin/cilium-mount
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            seLinuxOptions:
              level: 's0'
              # Running with spc_t since we have removed the privileged mode.
              # Users can change it to a different type as long as they have the
              # type available on the system.
              type: 'spc_t'
            capabilities:
              drop:
                - ALL
              add:
                # Only used for 'mount' cgroup
                - SYS_ADMIN
                # Used for nsenter
                - SYS_CHROOT
                - SYS_PTRACE
        - name: apply-sysctl-overwrites
          image: 'quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36'
          imagePullPolicy: IfNotPresent
          env:
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
              nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
              rm /hostbin/cilium-sysctlfix
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            seLinuxOptions:
              level: 's0'
              # Running with spc_t since we have removed the privileged mode.
              # Users can change it to a different type as long as they have the
              # type available on the system.
              type: 'spc_t'
            capabilities:
              drop:
                - ALL
              add:
                # Required in order to access host's /etc/sysctl.d dir
                - SYS_ADMIN
                # Used for nsenter
                - SYS_CHROOT
                - SYS_PTRACE
        # Mount the bpf fs if it is not mounted. We will perform this task
        # from a privileged container because the mount propagation bidirectional
        # only works from privileged containers.
        - name: mount-bpf-fs
          image: 'quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36'
          imagePullPolicy: IfNotPresent
          args:
            - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
          command:
            - /bin/bash
            - -c
            - --
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
        - name: clean-cilium-state
          image: 'quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36'
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 'cp-vms.k8s.lmwpva.net'
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            seLinuxOptions:
              level: 's0'
              # Running with spc_t since we have removed the privileged mode.
              # Users can change it to a different type as long as they have the
              # type available on the system.
              type: 'spc_t'
            capabilities:
              # Most of the capabilities here are the same ones used in the
              # cilium-agent's container because this container can be used to
              # uninstall all Cilium resources, and therefore it is likely that
              # will need the same capabilities.
              add:
                # Used since cilium modifies routing tables, etc...
                - NET_ADMIN
                # Used in iptables. Consider removing once we are iptables-free
                - SYS_MODULE
                # We need it for now but might not need it for >= 5.11 specially
                # for the 'SYS_RESOURCE'.
                # In >= 5.8 there's already BPF and PERMON capabilities
                - SYS_ADMIN
                # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
                - SYS_RESOURCE
                # Both PERFMON and BPF requires kernel 5.8, container runtime
                # cri-o >= v1.22.0 or containerd >= v1.5.0.
                # If available, SYS_ADMIN can be removed.
                #- PERFMON
                #- BPF
              drop:
                - ALL
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /run/cilium/cgroupv2
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: 'cilium'
      serviceAccountName: 'cilium'
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To mount cgroup2 filesystem on the host
        - name: hostproc
          hostPath:
            path: /proc
            type: Directory
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /run/cilium/cgroupv2
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
          # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
          # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
        - name: host-proc-sys-net
          hostPath:
            path: /proc/sys/net
            type: Directory
        - name: host-proc-sys-kernel
          hostPath:
            path: /proc/sys/kernel
            type: Directory
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
        - name: cilium-operator
          image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 'cp-vms.k8s.lmwpva.net'
            - name: KUBERNETES_SERVICE_PORT
              value: '6443'
          livenessProbe:
            httpGet:
              host: '127.0.0.1'
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: 'cilium-operator'
      serviceAccountName: 'cilium-operator'
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
